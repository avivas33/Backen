#!/bin/bash

# Script de configuración para despliegue en Ubuntu
# Guía completa para desplegar Api_Celero en servidor Ubuntu

echo "=== Guía de Despliegue de Api_Celero en Ubuntu ==="
echo ""

echo "1. INSTALACIÓN DE DEPENDENCIAS EN UBUNTU"
echo "----------------------------------------"
echo "sudo apt update"
echo "sudo apt install -y wget apt-transport-https"
echo "wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb"
echo "sudo dpkg -i packages-microsoft-prod.deb"
echo "sudo apt update"
echo "sudo apt install -y dotnet-sdk-9.0"
echo "sudo apt install -y nginx"
echo "sudo systemctl enable nginx"
echo "sudo systemctl start nginx"
echo ""

echo "2. CONFIGURACIÓN DEL PROYECTO"
echo "------------------------------"
echo "# Subir archivos al servidor (usando scp, rsync, git, etc.)"
echo "# Ejemplo con scp:"
echo "scp -r ./Api_Celero usuario@servidor:/var/www/api-celero/"
echo ""
echo "# En el servidor:"
echo "cd /var/www/api-celero"
echo "cp .env.example .env"
echo "nano .env  # Editar con valores reales"
echo ""

echo "3. CONFIGURACIÓN DE VARIABLES DE ENTORNO"
echo "----------------------------------------"
echo "# Crear archivo .env con los valores reales:"
echo "ASPNETCORE_ENVIRONMENT=Production"
echo "ASPNETCORE_URLS=http://0.0.0.0:5000"
echo "GOOGLE_RECAPTCHA_PROJECT_ID=celero-apps"
echo "GOOGLE_RECAPTCHA_API_KEY=tu-api-key-real"
echo "GOOGLE_RECAPTCHA_SITE_KEY=tu-site-key-real"
echo "RESEND_API_KEY=tu-resend-api-key-real"
echo "RESEND_FROM_EMAIL=noreply@celero.network"
echo "RESEND_FROM_NAME=Celero Network"
echo "ALLOWED_ORIGINS=https://selfservice-dev.celero.network,https://selfservice.celero.network"
echo ""

echo "4. PUBLICACIÓN DEL PROYECTO"
echo "---------------------------"
echo "dotnet publish -c Release -o ./publish"
echo ""

echo "5. CONFIGURACIÓN DE NGINX"
echo "-------------------------"
echo "# Crear archivo de configuración de nginx:"
echo "sudo nano /etc/nginx/sites-available/api-celero"
echo ""
echo "# Contenido del archivo nginx:"
echo "server {"
echo "    listen 80;"
echo "    server_name tu-dominio.com;"
echo "    "
echo "    location / {"
echo "        proxy_pass http://localhost:5000;"
echo "        proxy_http_version 1.1;"
echo "        proxy_set_header Upgrade \$http_upgrade;"
echo "        proxy_set_header Connection keep-alive;"
echo "        proxy_set_header Host \$host;"
echo "        proxy_set_header X-Real-IP \$remote_addr;"
echo "        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;"
echo "        proxy_set_header X-Forwarded-Proto \$scheme;"
echo "        proxy_cache_bypass \$http_upgrade;"
echo "    }"
echo "}"
echo ""
echo "# Habilitar el sitio:"
echo "sudo ln -s /etc/nginx/sites-available/api-celero /etc/nginx/sites-enabled/"
echo "sudo nginx -t"
echo "sudo systemctl reload nginx"
echo ""

echo "6. CONFIGURACIÓN DE SYSTEMD SERVICE"
echo "-----------------------------------"
echo "# Crear servicio systemd:"
echo "sudo nano /etc/systemd/system/api-celero.service"
echo ""
echo "# Contenido del archivo service:"
echo "[Unit]"
echo "Description=Api Celero Web API"
echo "After=network.target"
echo ""
echo "[Service]"
echo "Type=notify"
echo "ExecStart=/usr/bin/dotnet /var/www/api-celero/publish/Api_Celero.dll"
echo "Restart=always"
echo "RestartSec=10"
echo "KillSignal=SIGINT"
echo "SyslogIdentifier=api-celero"
echo "User=www-data"
echo "Environment=ASPNETCORE_ENVIRONMENT=Production"
echo "Environment=DOTNET_PRINT_TELEMETRY_MESSAGE=false"
echo "EnvironmentFile=/var/www/api-celero/.env"
echo ""
echo "[Install]"
echo "WantedBy=multi-user.target"
echo ""
echo "# Habilitar y iniciar el servicio:"
echo "sudo systemctl daemon-reload"
echo "sudo systemctl enable api-celero"
echo "sudo systemctl start api-celero"
echo "sudo systemctl status api-celero"
echo ""

echo "7. CONFIGURACIÓN DE FIREWALL"
echo "-----------------------------"
echo "sudo ufw allow 80/tcp"
echo "sudo ufw allow 443/tcp"
echo "sudo ufw allow 22/tcp"
echo "sudo ufw enable"
echo ""

echo "8. CERTIFICADO SSL (OPCIONAL)"
echo "-----------------------------"
echo "sudo apt install -y certbot python3-certbot-nginx"
echo "sudo certbot --nginx -d tu-dominio.com"
echo ""

echo "9. COMANDOS ÚTILES"
echo "------------------"
echo "# Verificar logs:"
echo "sudo journalctl -u api-celero -f"
echo ""
echo "# Reiniciar servicio:"
echo "sudo systemctl restart api-celero"
echo ""
echo "# Verificar estado:"
echo "sudo systemctl status api-celero"
echo ""
echo "# Verificar nginx:"
echo "sudo nginx -t"
echo "sudo systemctl status nginx"
echo ""

echo "10. ESTRUCTURA DE DIRECTORIOS RECOMENDADA"
echo "----------------------------------------"
echo "/var/www/api-celero/"
echo "├── publish/                 # Archivos publicados"
echo "├── .env                     # Variables de entorno"
echo "├── logs/                    # Logs de la aplicación"
echo "└── backups/                 # Respaldos"
echo ""

echo "¡Despliegue completado!"
echo "La API estará disponible en: http://tu-dominio.com"
echo "Endpoints principales:"
echo "- GET /api/clientes/info - Información del cliente"
echo "- POST /api/clientes/verificar-recaptcha - Verificación reCAPTCHA"
echo "- POST /api/clientes/enviar-email - Envío de emails"
